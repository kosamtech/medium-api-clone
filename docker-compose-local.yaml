services:
  elasticsearch:
    image: elasticsearch:8.16.3
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - medium-network
      
  api:
    build:
      context: .
      dockerfile: ./dockerfile/local/django/Dockerfile
    command: /start
    volumes:
      - .:/app:z
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - "8000"
    env_file:
      - ./.envs/.local/.django
      - ./..envs/.local/.postgres
    depends_on:
      - postgres
      - mailhog
      - redis
      - elasticsearch
    networks:
      - medium-network
  
  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - medium-network
  
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "8025:8025"
    networks:
      - medium-network
  
  redis:
    image: redis:7-alpine
    networks:
      - medium-network
    
  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    depends_on:
      - redis
      - postgres
      - mailhog
    networks:
      - medium-network
  
  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-flower
    volumes:
      - flower_data:/data
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - postgres
    networks:
      - medium-network
  
  nginx:
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    depends_on:
      - api
    ports:
      - "8000:80"
    networks:
      - medium-network

networks:
  medium-network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  flower_data: {}